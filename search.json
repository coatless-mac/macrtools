[{"path":"https://rmacoslib.github.io/macrtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Joseph Balamuta. Author, maintainer, copyright holder.","code":""},{"path":"https://rmacoslib.github.io/macrtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balamuta J (2023). macrtools: macOS Rtools package. R package version 0.0.0.9000, https://rmacoslib.github.io/macrtools/.","code":"@Manual{,   title = {macrtools: macOS Rtools package},   author = {James Joseph Balamuta},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://rmacoslib.github.io/macrtools/}, }"},{"path":"https://rmacoslib.github.io/macrtools/index.html","id":"macrtools","dir":"","previous_headings":"","what":"macOS Rtools package","title":"macOS Rtools package","text":"work progress package. Features may unstable. unofficial project support users macOS. repository contains macrtools macOS-R package. package setup re-create compiled code toolchain CRAN official macOS R binary handles setting macOS R development toolchain described macOS tools r-project developer page. Note: installer package developed James Joseph Balamuta connection R project’s macOS CRAN maintainers.","code":""},{"path":"https://rmacoslib.github.io/macrtools/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"macOS Rtools package","text":"overview use package, please see following video:","code":""},{"path":"https://rmacoslib.github.io/macrtools/index.html","id":"install-the-r-package","dir":"","previous_headings":"Quick Start","what":"Install the R Package","title":"macOS Rtools package","text":"can install development version macrtools GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"rmacoslib/macrtools\")"},{"path":"https://rmacoslib.github.io/macrtools/index.html","id":"install-the-r-compilation-toolchain-using-the-r-package","dir":"","previous_headings":"Quick Start","what":"Install the R Compilation Toolchain using the R Package","title":"macOS Rtools package","text":"package installed, required components can installed using: attempt install: Xcode CLI gfortran R Development binaries compilation toolchain can removed using:","code":"macrtools::macos_rtools_install() macrtools::macos_rtools_uninstall()"},{"path":"https://rmacoslib.github.io/macrtools/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"macOS Rtools package","text":"package designed help diagnose, install, uninstall different parts macOS R compilation toolchain.","code":""},{"path":"https://rmacoslib.github.io/macrtools/index.html","id":"diagnose","dir":"","previous_headings":"Usage","what":"Diagnose","title":"macOS Rtools package","text":"package features two tools seek identify core components installed:","code":"# We can check if Xcode CLI is present using: macrtools::is_xcode_cli_installed()  # We can verify gfortran is present as well macrtools::is_gfortran_installed()"},{"path":"https://rmacoslib.github.io/macrtools/index.html","id":"installation","dir":"","previous_headings":"Usage","what":"Installation","title":"macOS Rtools package","text":"next set functions focus primarily installing different binary packages required locations.","code":"# We can perform a non-interactive installation of Xcode CLI with: macrtools::xcode_cli_install()   # We can install gfortran using: macrtools::gfortran_install()  # And other binaries required for compiling R using: macrtools::recipes_binary_install('r-base-dev')"},{"path":"https://rmacoslib.github.io/macrtools/index.html","id":"uninstall","dir":"","previous_headings":"Usage","what":"Uninstall","title":"macOS Rtools package","text":"longer interest development tools present, can remove development tools using: Note: yet uninstall R development binaries.","code":"# We can remove Xcode CLI using macrtools::xcode_cli_uninstall()  # We can uninstall gfortran using: macrtools::gfortran_uninstall()"},{"path":"https://rmacoslib.github.io/macrtools/index.html","id":"design-decisions","dir":"","previous_headings":"","what":"Design Decisions","title":"macOS Rtools package","text":"macOS installer package (.pkg) Apple Disk Image (.dmg) ? previously wrote successful r-macos-rtools installer package. However, part -keep installer package, needed yearly subscription Apple’s Developer program, base cost ~$99 sales tax ~$6 leading annual expense ~$105 per year. Given used Developer account sign notarize r-macos-rtools installer, opted continue path. said, grateful Professor Timothy Bates University Edinburgh. provided initial financial support allowed installer signed tested. Moreover, hope placing logic inside R package, community R developers able play active role feature development.","code":""},{"path":"https://rmacoslib.github.io/macrtools/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"macOS Rtools package","text":"AGPL (>=3)","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/assert.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert a condition — assert","title":"Assert a condition — assert","text":"assert() allows function state checked stopped.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/assert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert a condition — assert","text":"","code":"assert(condition, message = NULL)  assert_mac()  assert_aarch64()  assert_x86_64()"},{"path":"https://rmacoslib.github.io/macrtools/reference/assert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert a condition — assert","text":"condition logical indicating status condition. message string display.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/binary_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Binary Packages — binary_download","title":"Download Binary Packages — binary_download","text":"R temporary directory created using tempdir() consults environment values TMPDIR, TMP, TEMP establish path. need use temporary directory root guaranteed access user's files.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/binary_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Binary Packages — binary_download","text":"","code":"binary_download(url, binary_file_name = basename(url), verbose = TRUE)"},{"path":"https://rmacoslib.github.io/macrtools/reference/binary_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Binary Packages — binary_download","text":"url link containing binary file download. binary_file_name Name binary file save. Default basname(url) verbose Display status messages. Default true","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/binary_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Binary Packages — binary_download","text":"file path binary file temporary R directory","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/binary_download.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Binary Packages — binary_download","text":"Downloads binary package onto user's computer temporary directory.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":null,"dir":"Reference","previous_headings":"","what":"Find, Install, or Uninstall gfortran — is_gfortran_installed","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"Set functions seek identify whether gfortran installed, allow gfortran installed, removing gfortran.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"","code":"is_gfortran_installed()  gfortran_version()  gfortran_install(password = getOption(\"macrtools.password\"), verbose = TRUE)  gfortran_uninstall(password = getOption(\"macrtools.password\"), verbose = TRUE)  gfortran_update(password = getOption(\"macrtools.password\"), verbose = TRUE)"},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"password Password user account install software. Default NULL. verbose Display messages indicating status","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"gfortran suite functions attempts locate, install, uninstall gfortran based default installation locations depend architecture: Intel (x86_64) /usr/local/gfortran /usr/local/bin/gfortran M1/M2 (arm64 aarch64) /opt/r/arm64/gfortran/ /opt/r/arm64/bin/gfortran","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":"check-if-gfortran-is-installed","dir":"Reference","previous_headings":"","what":"Check if gfortran is installed","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"Checks local file system whether gfortran installed default installation location.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":"installing-gfortran","dir":"Reference","previous_headings":"","what":"Installing gfortran","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"gfortran_install() function aims install gfortran appropriate location Intel (x86_64) M1/M2 (arm64/aarch64).","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":"gfortran-installation-for-intel-macs-x-","dir":"Reference","previous_headings":"","what":"gfortran Installation for Intel Macs (x86_64)","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"Intel gfortran installer DMG image mounted, installed, unmounted. using following set R sanitized shell commands:   Lastly, modify PATH environment variable recognize newly installed software adding ~/.Renviron file following:","code":"# Mount the `.dmg` installer image hdiutil attach \"$path_to_dmg\" -nobrowse -quiet  # Install the DMG Image into root sudo installer \\   -pkg /Volume/gfortran-8.2-Mojave/gfortran-8.2-Mojave/gfortran.pkg \\   -target /  # Unmount the `.dmg` installer image hdiutil detach /Volumes/gfortran-8.2-Mojave touch ~/.Renviron cat << \"EOF\" > ~./Renviron ## macrtools - gfortran: start PATH=${PATH}:/usr/local/gfortran/bin ## macrtools - gfortran: end EOF"},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":"gfortran-installation-for-m-or-m-macs-arm-","dir":"Reference","previous_headings":"","what":"gfortran Installation for M1 or M2 Macs (arm64)","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"M1 M2 gfortran installer tar file unpacked directory. Depending R version, opt install either gfortran 12 R 4.2 gfortran 11 R 4.1 users R 4.2 M1 M2 mac, R sanitized shell commands used :   users R 4.1 M1 M2 mac, R sanitized shell commands used :   Lastly, modify PATH environment variable recognize newly installed software adding ~/.Renviron file following:","code":"URL=\"https://mac.r-project.org/tools/gfortran-12.0.1-20220312-is-darwin20-arm64.tar.xz\" curl -O --output-dir /tmp/ \"$URL\" sudo mkdir -p /opt/R/arm64/ sudo tar fxz /tmp/gfortran-12.0.1-20220312-is-darwin20-arm64.tar.xz -C /opt/R/arm64/ --strip-level 3 rm  /tmp/gfortran-12.0.1-20220312-is-darwin20-arm64.tar.xz URL=\"https://mac.r-project.org/libs-arm64/gfortran-f51f1da0-darwin20.0-arm64.tar.gz\" curl -O --output-dir /tmp/ \"$URL\" sudo mkdir -p /opt/R/arm64/ sudo tar fxz /tmp/gfortran-f51f1da0-darwin20.0-arm64.tar.gz -C /opt/R/arm64/ --strip-level 3 rm  /tmp/gfortran-f51f1da0-darwin20.0-arm64.tar.gz touch ~/.Renviron cat << \"EOF\" > ~./Renviron ## macrtools - gfortran: start PATH=${PATH}:/opt/R/arm64/gfortran/bin ## macrtools - gfortran: end EOF"},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":"uninstalling-gfortran","dir":"Reference","previous_headings":"","what":"Uninstalling gfortran","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"gfortran_uninstall() attempts remove gfortran default installation locations described details section.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":"uninstalling-gfortran-for-intel-macs","dir":"Reference","previous_headings":"","what":"Uninstalling gfortran for Intel Macs","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"use R sanitized shell command :   uninstall steps based : https://gcc.gnu.org/wiki/GFortranBinariesMacOS","code":"sudo rm -rf /usr/local/gfortran /usr/local/bin/gfortran"},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":"uninstalling-gfortran-for-m-or-m-macs-arm-","dir":"Reference","previous_headings":"","what":"Uninstalling gfortran for M1 or M2 Macs (arm64)","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"M1 M2 Macs (arm64), use R sanitized shell command :   aligns default path used CRAN arm64: https://mac.r-project.org/tools/","code":"sudo rm -rf /opt/r/arm64/gfortran/ /opt/r/arm64/bin/gfortran"},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":"updating-gfortran","dir":"Reference","previous_headings":"","what":"Updating gfortran","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"gfortran_update() attempts update version gfortran installed using provided gfortran-update-sdk inside /opt/R/arm64/gfortran/bin. Please advised update command works M1/M2 (arm64/aarch64) users R 4.2 . update command issued using R sanitized version shell command:","code":"sudo /opt/R/arm64/gfortran/bin/gfortran-update-sdk"},{"path":"https://rmacoslib.github.io/macrtools/reference/gfortran.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find, Install, or Uninstall gfortran — is_gfortran_installed","text":"","code":"# Check if gfortran is installed is_gfortran_installed() #> [1] TRUE"},{"path":"https://rmacoslib.github.io/macrtools/reference/install-directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Installation Directory Locations — install_directory_x86_64","title":"Installation Directory Locations — install_directory_x86_64","text":"Pre-defined constants software install location.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/install-directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Installation Directory Locations — install_directory_x86_64","text":"","code":"install_directory_x86_64()  install_directory_arm64()  install_directory_xcode_cli()  install_directory_xcode_app()"},{"path":"https://rmacoslib.github.io/macrtools/reference/install-directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Installation Directory Locations — install_directory_x86_64","text":"string containing fixed path installation directory.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/install-directory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Installation Directory Locations — install_directory_x86_64","text":"following fixed paths: Intel (x86_64) /usr/local M1 M2 (arm64 aarch64) /opt/R/arm64 Xcode CLI /Library/Developer/CommandLineTools Xcode App /Applications/Xcode.app/Contents/Developer","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/macos-rtools.html","id":null,"dir":"Reference","previous_headings":"","what":"Install and Uninstall the macOS R Toolchain — macos_rtools_install","title":"Install and Uninstall the macOS R Toolchain — macos_rtools_install","text":"macos_rtools_install() function aims install required dependencies macOS R compilation toolchain. Meanwhile, macros_rtools_uninstall() function aims remove installed files computer.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/macos-rtools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install and Uninstall the macOS R Toolchain — macos_rtools_install","text":"","code":"macos_rtools_install(   password = getOption(\"macrtools.password\"),   verbose = TRUE )  macos_rtools_uninstall(   password = getOption(\"macrtools.password\"),   verbose = TRUE )"},{"path":"https://rmacoslib.github.io/macrtools/reference/macos-rtools.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install and Uninstall the macOS R Toolchain — macos_rtools_install","text":"password Password user account request sudo access. verbose Describe step taken. Default TRUE","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/macos-rtools.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install and Uninstall the macOS R Toolchain — macos_rtools_install","text":"macOS R compilation toolchain consists : Xcode CLI gfortran series binary packages recipes system compile R. mac_rtools_install() function attempts install required components. Meanwhile, mac_rtools_uninstall() function aims delete uninstall Xcode CLI gfortran binaries. present moment, support uninstalling binary packages recipes.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/macos-rtools.html","id":"headless-or-unattended-installation","dir":"Reference","previous_headings":"","what":"Headless or Unattended Installation","title":"Install and Uninstall the macOS R Toolchain — macos_rtools_install","text":"installation require human loop, please set environment variable macrtools.password user profile:","code":"Sys.setenv(\"macrtools.password\" = \"your-password-here\")"},{"path":"https://rmacoslib.github.io/macrtools/reference/macos-rtools.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install and Uninstall the macOS R Toolchain — macos_rtools_install","text":"","code":"if (FALSE) {  # Install all tools required for compiling code on macOS with R macos_rtools_install()  # Enter a password to avoid being prompted! macos_rtools_install(password = \"hello-compiled-code-world\")  }  if (FALSE) {  # Remove Xcode CLI and gfortran tools required for compiling code on macOS with R macos_rtools_uninstall()  # Enter a password to avoid being prompted! macos_rtools_uninstall(password = \"hello-compiled-code-world\")  }"},{"path":"https://rmacoslib.github.io/macrtools/reference/print.cli.html","id":null,"dir":"Reference","previous_headings":"","what":"Print CLI Responses — print.cli","title":"Print CLI Responses — print.cli","text":"Print CLI Responses","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/print.cli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print CLI Responses — print.cli","text":"","code":"# S3 method for cli print(x, ...)"},{"path":"https://rmacoslib.github.io/macrtools/reference/print.cli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print CLI Responses — print.cli","text":"x object class cli ... Additional parameters","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/recipes_binary_install.html","id":null,"dir":"Reference","previous_headings":"","what":"Install Binary Library from Recipes Project — recipes_binary_install","title":"Install Binary Library from Recipes Project — recipes_binary_install","text":"Convenience function seeks install pre-built binary libraries used CRAN macOS recipes system designed Simon Urbanek.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/recipes_binary_install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install Binary Library from Recipes Project — recipes_binary_install","text":"","code":"recipes_binary_install(   pkgs,   url = \"https://mac.R-project.org/bin\",   os = tolower(paste0(system(\"uname -s\", intern = TRUE), gsub(\"\\\\..*\", \"\",     system(\"uname -r\", intern = TRUE)))),   arch = system(\"uname -m\", intern = TRUE),   os.arch = \"auto\",   dependencies = TRUE,   action = c(\"install\", \"list\"),   sudo = TRUE,   password = NULL,   verbose = TRUE )"},{"path":"https://rmacoslib.github.io/macrtools/reference/recipes_binary_install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install Binary Library from Recipes Project — recipes_binary_install","text":"pkgs Character vector binary names install, \"\" binaries, \"r-base-dev\" R binaries. url URL repository root. Default https://mac.R-project.org/bin os Name version OS, e.g. \"darwin22\" \"darwin\" refers macOS 22 kernel version number. arch architecture either arm64 (M1/M2) x86_64 (Intel). used os.arch=\"auto\". os.arch Either name repository \"darwin20/arm64\", \"darwin17/x86_64\", \"auto\". Default \"auto\". dependencies Install build dependencies (TRUE) requested packages (FALSE). Default TRUE. action Determine binary downloaded installed (\"install\") displayed (\"list\"). Default \"install\" download install binaries. sudo Attempt install binaries using sudo permissions. Default TRUE. password User password switch sudo user. Default NULL. verbose Describe steps taken. Default TRUE","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/recipes_binary_install.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install Binary Library from Recipes Project — recipes_binary_install","text":"function attempts detect appropriate repository installation path binary packages \"auto\" set. default, repository install path either:","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/recipes_binary_install.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Install Binary Library from Recipes Project — recipes_binary_install","text":"Simon Urbanek wrote function made available https://mac.r-project.org/bin/ James Joseph Balamuta packaged function added option use sudo command line.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/recipes_binary_install.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install Binary Library from Recipes Project — recipes_binary_install","text":"","code":"# Perform a dry-run to see the required development packages. recipes_binary_install(\"r-base-dev\", action = \"list\") #> Downloading https://mac.R-project.org/bin/REPOS ... #> Using repository  https://mac.R-project.org/bin/darwin17/x86_64 ... #> Downloading index  https://mac.R-project.org/bin/darwin17/x86_64/PACKAGES ... #>  [1] \"https://mac.R-project.org/bin/darwin17/x86_64/xz-5.2.5-darwin.17-x86_64.tar.xz\"           #>  [2] \"https://mac.R-project.org/bin/darwin17/x86_64/tiff-4.3.0-darwin.17-x86_64.tar.xz\"         #>  [3] \"https://mac.R-project.org/bin/darwin17/x86_64/libpng-1.6.37-darwin.17-x86_64.tar.xz\"      #>  [4] \"https://mac.R-project.org/bin/darwin17/x86_64/openssl-1.1.1m-darwin.17-x86_64.tar.xz\"     #>  [5] \"https://mac.R-project.org/bin/darwin17/x86_64/jpeg-9d-darwin.17-x86_64.tar.xz\"            #>  [6] \"https://mac.R-project.org/bin/darwin17/x86_64/pcre2-10.39-darwin.17-x86_64.tar.xz\"        #>  [7] \"https://mac.R-project.org/bin/darwin17/x86_64/cairo-1.16.0-darwin.17-x86_64.tar.xz\"       #>  [8] \"https://mac.R-project.org/bin/darwin17/x86_64/texinfo-6.8-darwin.17-x86_64.tar.xz\"        #>  [9] \"https://mac.R-project.org/bin/darwin17/x86_64/libwebp-1.2.1-darwin.17-x86_64.tar.xz\"      #> [10] \"https://mac.R-project.org/bin/darwin17/x86_64/pkgconfig-0.29.2-darwin.17-x86_64.tar.xz\"   #> [11] \"https://mac.R-project.org/bin/darwin17/x86_64/freetype-2.11.1-darwin.17-x86_64.tar.xz\"    #> [12] \"https://mac.R-project.org/bin/darwin17/x86_64/fontconfig-2.13.94-darwin.17-x86_64.tar.xz\" #> [13] \"https://mac.R-project.org/bin/darwin17/x86_64/pixman-0.40.0-darwin.17-x86_64.tar.xz\"      #> [14] \"https://mac.R-project.org/bin/darwin17/x86_64/zlib-stub-0.1-darwin.17-x86_64.tar.xz\"      #> [15] \"https://mac.R-project.org/bin/darwin17/x86_64/harfbuzz-3.1.1-darwin.17-x86_64.tar.xz\"     #> [16] \"https://mac.R-project.org/bin/darwin17/x86_64/expat-2.4.2-darwin.17-x86_64.tar.xz\"        #> [17] \"https://mac.R-project.org/bin/darwin17/x86_64/icu-70.1-darwin.17-x86_64.tar.xz\"           #> [18] \"https://mac.R-project.org/bin/darwin17/x86_64/fribidi-1.0.11-darwin.17-x86_64.tar.xz\"      if (FALSE) { # Install the mandatory library binaries for building R on macOS using sudo recipes_binary_install(\"r-base-dev\", sudo = TRUE) }"},{"path":"https://rmacoslib.github.io/macrtools/reference/tar_package_install.html","id":null,"dir":"Reference","previous_headings":"","what":"Install Binary Package in a Tar Format — tar_package_install","title":"Install Binary Package in a Tar Format — tar_package_install","text":"use sudo required unpack binary file low-level system area.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/tar_package_install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install Binary Package in a Tar Format — tar_package_install","text":"","code":"tar_package_install(   path_to_tar,   install_directory,   strip_levels,   sudo = TRUE,   password = NULL,   verbose = TRUE )"},{"path":"https://rmacoslib.github.io/macrtools/reference/tar_package_install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install Binary Package in a Tar Format — tar_package_install","text":"path_to_tar Location tar file install_directory Location unpack extract tar file. strip_levels Remove nesting inside tar file sudo Run command root sudo. Default TRUE password User password use enter sudo mode. verbose Display status messages","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/tar_package_install.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install Binary Package in a Tar Format — tar_package_install","text":"Unpacks Tar package places system library","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-cli.html","id":null,"dir":"Reference","previous_headings":"","what":"Find, Install, or Uninstall XCode CLI — is_xcode_cli_installed","title":"Find, Install, or Uninstall XCode CLI — is_xcode_cli_installed","text":"Set functions seek identify whether XCode CLI installed, allow XCode CLI installed, removing XCode CLI.","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-cli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find, Install, or Uninstall XCode CLI — is_xcode_cli_installed","text":"","code":"is_xcode_cli_installed()  xcode_cli_install(password = getOption(\"macrtools.password\"), verbose = TRUE)  xcode_cli_uninstall(password = getOption(\"macrtools.password\"), verbose = TRUE)  xcode_cli_path()  xcode_cli_switch(password = getOption(\"macrtools.password\"), verbose = TRUE)  xcode_cli_reset(password = getOption(\"macrtools.password\"), verbose = TRUE)"},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-cli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find, Install, or Uninstall XCode CLI — is_xcode_cli_installed","text":"password User password access sudo. verbose Display status messages","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-cli.html","id":"check-if-xcode-cli-is-installed","dir":"Reference","previous_headings":"","what":"Check if XCode CLI is installed","title":"Find, Install, or Uninstall XCode CLI — is_xcode_cli_installed","text":"Checks using xcode-select -p command obtain relevant directory. status code returned 0, tools exist. Otherwise, return value 2 indicating tools missing. Implementation based : https://stackoverflow.com/questions/15371925/--check--xcode-command-line-tools--installed","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-cli.html","id":"xcode-cli-installation","dir":"Reference","previous_headings":"","what":"XCode CLI Installation","title":"Find, Install, or Uninstall XCode CLI — is_xcode_cli_installed","text":"xcode_cli_install() function performs headless non-interactive installation Xcode CLI tools. installation process requires three steps: Place temporary file indicating need download Xcode CLI Determine latest version Xcode CLI running softwareupdate Install latest version using softwareupdate sudo. alternative approach interactive installation Xcode CLI typing Terminal:   command trigger pop window walk package installation.","code":"sudo xcode-select --install"},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-cli.html","id":"steps-of-the-headless-cli-installation","dir":"Reference","previous_headings":"","what":"Steps of the Headless CLI Installation","title":"Find, Install, or Uninstall XCode CLI — is_xcode_cli_installed","text":"temporary file created using:   , deduce latest version Xcode available user R sanitized version chained shell commands:   , trigger installation process sudo using:   $product_information obtained previous command. Finally, remove temporary installation file.   steps obtained Timothy Sutton's xcode-cli-tools.sh script , slightly modernized.","code":"touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress product_information=softwareupdate -l |    grep '\\\\*.*Command Line' |    tail -n 1 |    awk -F\"*\" '{print $2}' |    sed -e 's/^ *//' |    sed 's/Label: //g' |    tr -d '\\n' sudo softwareupdate -i \"$product_information\" --verbose touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress"},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-cli.html","id":"uninstalling-xcode-cli","dir":"Reference","previous_headings":"","what":"Uninstalling Xcode CLI","title":"Find, Install, or Uninstall XCode CLI — is_xcode_cli_installed","text":"xcode_cli_uninstall() attempts remove Xcode CLI tools. Per Apple Technical Note TN2339: Xcode includes command-line tools. installed system, remove uninstall command-line tools. /Library/Developer/CommandLineTools directory exists system, remove uninstall command-line tools Thus, xcode_cli_uninstall() opts perform second step . use R sanitized shell version :   Xcode application detect, note uninstall Xcode application. Instead, request user uninstall Xcode app using following steps: Make sure Xcode closed. Quit Xcode needed. Open Finder > Applications, select Xcode move Trash. Empty trash. addition, open Terminal run:","code":"sudo rm -rf /Library/Developer/CommandLineTools sudo /Developer/Library/uninstall-devtools --mode=all"},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-cli.html","id":"change-xcode-cli-location","dir":"Reference","previous_headings":"","what":"Change Xcode CLI Location","title":"Find, Install, or Uninstall XCode CLI — is_xcode_cli_installed","text":"Xcode Application previously installed, underlying path reported xcode-select may reflect Xcode CLI location. situation can rectified using xcode_cli_switch() function, changes command line tool directory away Xcode application location Xcode CLI location. uses default Xcode CLI path.   fix issue, recommend using xcode_cli_reset() function.","code":"sudo xcode-select --switch /Library/Developer/CommandLineTools"},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-cli.html","id":"reset-xcode-cli","dir":"Reference","previous_headings":"","what":"Reset Xcode CLI","title":"Find, Install, or Uninstall XCode CLI — is_xcode_cli_installed","text":"xcode_cli_reset() function uses xcode-select restore default Xcode CLI settings. use R sanitized shell version :","code":"sudo xcode-select --reset"},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-cli.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find, Install, or Uninstall XCode CLI — is_xcode_cli_installed","text":"","code":"# Check if Xcode CLI is installed is_xcode_cli_installed() #> [1] FALSE # Determine the path location of Xcode CLI xcode_cli_path() #> [1] \"/Applications/Xcode_14.2.app/Contents/Developer\""},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-select.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface with xcode-select Shell Commands — xcode_select","title":"Interface with xcode-select Shell Commands — xcode_select","text":"Trigger xcode-select commands within R","code":""},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface with xcode-select Shell Commands — xcode_select","text":"","code":"xcode_select(args)  xcode_select_path()  xcode_select_version()"},{"path":"https://rmacoslib.github.io/macrtools/reference/xcode-select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface with xcode-select Shell Commands — xcode_select","text":"args Flag arguments pass xcode-select","code":""}]
