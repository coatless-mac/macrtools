% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/openmp.R
\name{is_openmp_installed}
\alias{is_openmp_installed}
\alias{openmp_version}
\alias{openmp_install}
\alias{openmp_uninstall}
\alias{openmp_test}
\title{Find, Install, or Uninstall OpenMP}
\usage{
is_openmp_installed()

openmp_version()

openmp_install(
  password = base::getOption("macrtools.password"),
  verbose = TRUE,
  configure_makevars = TRUE
)

openmp_uninstall(
  password = base::getOption("macrtools.password"),
  verbose = TRUE,
  configure_makevars = TRUE
)

openmp_test()
}
\arguments{
\item{password}{Password for user account to install software. Default is
\code{NULL}.}

\item{verbose}{Display messages indicating status}

\item{configure_makevars}{Automatically configure ~/.R/Makevars with or without OpenMP flags.
Default is \code{TRUE}.}
}
\description{
Set of functions that seek to identify whether OpenMP was installed,
allow OpenMP to be installed, and removing OpenMP.
}
\details{
The \verb{openmp_*()} suite of functions attempts to locate, install, and uninstall
the OpenMP runtime library based on the installed Xcode version. These functions
mirror the logic described on the \href{https://mac.r-project.org/openmp/}{macOS R Project OpenMP page}
and should be used by advanced users who wish to compile R packages
that use OpenMP for parallel processing. They are not required for most users.

OpenMP runtime is downloaded from the R-project repository for macOS and installed to:
\itemize{
\item Library: \verb{/usr/local/lib/libomp.dylib}
\item Headers:
\itemize{
\item \verb{/usr/local/include/omp.h};
\item \verb{/usr/local/include/ompt.h};
\item \verb{/usr/local/include/omp-tools.h}; and,
\item \verb{/usr/local/include/ompx.h} (added in LLVM 19.1.0).
}
}

\strong{Note:} Apple has explicitly disabled OpenMP support in Xcode compilers, but the
runtime library can be installed separately and used with \code{-Xclang -fopenmp}
compiler flags.
}
\section{Check if \code{OpenMP} is installed}{


Checks the local file system for whether OpenMP runtime library is installed
in the default installation location. Specifically, it checks for the
\code{libomp.dylib} library file and the \code{omp.h} header file, e.g:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{# Check if OpenMP library exists
[ -f /usr/local/lib/libomp.dylib ] && echo "Library found" || echo "Library not found"
# Check if OpenMP header files exist
[ -f /usr/local/include/omp.h ] && echo "Headers found" || echo "Headers not found"
}\if{html}{\out{</div>}}
}

\section{Installing \code{OpenMP}}{

The \code{openmp_install()} function aims to install the appropriate OpenMP
runtime library based on the detected Xcode version.
\subsection{OpenMP Installation Process}{

The installation process automatically detects your Xcode version and
downloads the corresponding OpenMP runtime from the R-project repository:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{VERSION="19.1.0"

# Download the appropriate version
curl -O https://mac.r-project.org/openmp/openmp-$\{VERSION\}-darwin20-Release.tar.gz

# Install to system directories
sudo tar fvxz openmp-$\{VERSION\}-darwin20-Release.tar.gz -C /
}\if{html}{\out{</div>}}
}

\subsection{Using OpenMP in R Packages}{

During installation, we will automatically configure your \verb{~/.R/Makevars}
file to include the necessary compiler flags for OpenMP support.

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{# macrtools - OpenMP: start
CPPFLAGS += -Xclang -fopenmp
LDFLAGS += -lomp
# macrtools - OpenMP: end
}\if{html}{\out{</div>}}

Alternatively, you can manually add the lines to your \verb{~/.R/Makevars} file.
Or, install packages from command line with:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{PKG_CPPFLAGS='-Xclang -fopenmp' PKG_LIBS=-lomp R CMD INSTALL myPackage
}\if{html}{\out{</div>}}
}
}

\section{Uninstalling \code{OpenMP}}{


The \code{openmp_uninstall()} attempts to remove OpenMP from the default
installation locations.

We use the \emph{R} sanitized \emph{shell} command to remove the installed files:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{sudo rm -f /usr/local/lib/libomp.dylib
sudo rm -f /usr/local/include/omp.h
sudo rm -f /usr/local/include/ompt.h
sudo rm -f /usr/local/include/omp-tools.h
sudo rm -f /usr/local/include/ompx.h
}\if{html}{\out{</div>}}

\strong{Note:} \code{ompx.h} was included in LLVM 19.1.0 and
may not exist in older OpenMP versions.
}

\section{Testing OpenMP Installation}{

After installing OpenMP, you can test if it's working by checking the
\verb{~/.R/Makevars} file for the correct flags and verifying the library signature.

\strong{Note:} This function does not attempt to compile any code, it only checks
the configuration and library signature.
}

\examples{
# Check if OpenMP is installed
is_openmp_installed()
}
