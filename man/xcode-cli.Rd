% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xcode-cli.R
\name{is_xcode_cli_installed}
\alias{is_xcode_cli_installed}
\alias{xcode_cli_install}
\alias{xcode_cli_uninstall}
\alias{xcode_cli_path}
\alias{xcode_cli_switch}
\alias{xcode_cli_reset}
\title{Find, Install, or Uninstall XCode CLI}
\usage{
is_xcode_cli_installed()

xcode_cli_install(password = getOption("macrtools.password"), verbose = TRUE)

xcode_cli_uninstall(password = getOption("macrtools.password"), verbose = TRUE)

xcode_cli_path()

xcode_cli_switch(password = getOption("macrtools.password"), verbose = TRUE)

xcode_cli_reset(password = getOption("macrtools.password"), verbose = TRUE)
}
\arguments{
\item{password}{User password to access \code{sudo}.}

\item{verbose}{Display status messages}
}
\description{
Set of functions that seek to identify whether XCode CLI was installed,
allow XCode CLI to be installed, and removing XCode CLI.
}
\section{Check if XCode CLI is installed}{


Checks using the \code{xcode-select -p} command to obtain the relevant
the directory. If the status code returned is 0, then the tools exist.
Otherwise, the return value will be 2 indicating that the tools are missing.

Implementation is based on:

\url{https://stackoverflow.com/questions/15371925/how-to-check-if-xcode-command-line-tools-are-installed}
}

\section{XCode CLI Installation}{


The \code{xcode_cli_install()} function performs a headless or non-interactive
installation of the Xcode CLI tools. This installation process requires
three steps:
\enumerate{
\item Place a temporary file indicating the need to download Xcode CLI
\item Determine the latest version of Xcode CLI by running \code{softwareupdate}
\item Install the latest version using \code{softwareupdate} with \code{sudo}.
}

The temporary file is placed at:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{/tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
}\if{html}{\out{</div>}}

From there, we deduce the latest version of Xcode available to the user
through an \emph{R} sanitized version of the chained \emph{shell} commands:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{softwareupdate -l |
   grep '\\\\*.*Command Line' |
   tail -n 1 |
   awk -F"*" '\{print $2\}' |
   sed -e 's/^ *//' |
   sed 's/Label: //g' |
   tr -d '\\n'
}\if{html}{\out{</div>}}

Then, we trigger the installation process using:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{softwareupdate -i "$product_information" --verbose
}\if{html}{\out{</div>}}

where \verb{$product_information} is obtained from the previous command.

Finally, we remove the temporary installation file.

These steps were obtained from Timothy Sutton (2013 - 2014, MIT license)'s
\href{https://github.com/timsutton/osx-vm-templates/blob/ce8df8a7468faa7c5312444ece1b977c1b2f77a4/scripts/xcode-cli-tools.sh#L8-L14}{xcode-cli-tools.sh}
and, slightly modernized.
}

\section{Uninstalling Xcode CLI}{


The \code{xcode_cli_uninstall()} attempts to remove \emph{only} the Xcode CLI tools.

Per the \href{https://developer.apple.com/library/archive/technotes/tn2339/_index.html#//apple_ref/doc/uid/DTS40014588-CH1-HOW_CAN_I_UNINSTALL_THE_COMMAND_LINE_TOOLS_}{Apple Technical Note TN2339}:
\itemize{
\item Xcode includes all of the command-line tools. If it is installed on your system, remove it to uninstall the command-line tools.
\item If the \verb{/Library/Developer/CommandLineTools} directory exists on your system, remove it to uninstall the command-line tools
}

Thus, the \code{xcode_cli_uninstall()} opts to perform the second step \strong{only}.
We use an \emph{R} sanitized \emph{shell} version of:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{sudo rm -rf /Library/Developer/CommandLineTools
}\if{html}{\out{</div>}}

If the Xcode application is detect, we note that we did not uninstall the
Xcode application. Instead, we request the user uninstall the Xcode
app using the following steps:
\enumerate{
\item Make sure that Xcode is closed. Quit Xcode if needed.
\item Open Finder > Applications, select Xcode and move it to Trash.
\item Empty the trash.
\item In addition, open Terminal and run:
}

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{sudo /Developer/Library/uninstall-devtools --mode=all
}\if{html}{\out{</div>}}
}

\section{Change Xcode CLI Location}{

If the Xcode Application has been previously installed, the underlying
path reported by \code{xcode-select} may not reflect the Xcode CLI location.
The situation can be rectified by using the \code{\link[=xcode_cli_switch]{xcode_cli_switch()}} function,
which changes the command line tool directory away from the Xcode application
location to the Xcode CLI location. This uses the \emph{default} Xcode CLI
path.

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{sudo xcode-select --switch /Library/Developer/CommandLineTools
}\if{html}{\out{</div>}}

If this does not fix the issue, we recommend using the \code{\link[=xcode_cli_reset]{xcode_cli_reset()}}
function.
}

\section{Reset Xcode CLI}{

The \code{\link[=xcode_cli_reset]{xcode_cli_reset()}} function uses \code{xcode-select} to restore
the default Xcode CLI settings.

We use an \emph{R} sanitized \emph{shell} version of:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{sudo xcode-select --reset
}\if{html}{\out{</div>}}
}

\examples{
# Check if Xcode CLI is installed
is_xcode_cli_installed()
# Determine the path location of Xcode CLI
xcode_cli_path()
}
