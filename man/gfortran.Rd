% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gfortran.R
\name{is_gfortran_installed}
\alias{is_gfortran_installed}
\alias{gfortran_version}
\alias{gfortran_install}
\alias{gfortran_uninstall}
\alias{gfortran_update}
\title{Find, Install, or Uninstall gfortran}
\usage{
is_gfortran_installed()

gfortran_version()

gfortran_install(
  password = base::getOption("macrtools.password"),
  verbose = TRUE
)

gfortran_uninstall(
  password = base::getOption("macrtools.password"),
  verbose = TRUE
)

gfortran_update(
  password = base::getOption("macrtools.password"),
  verbose = TRUE
)
}
\arguments{
\item{password}{Password for user account to install software. Default is
\code{NULL}.}

\item{verbose}{Display messages indicating status}
}
\description{
Set of functions that seek to identify whether gfortran was installed,
allow gfortran to be installed, and removing gfortran.
}
\details{
The \code{gfortran} suite of functions attempts to locate, install, and uninstall
\code{gfortran} based the default installation locations that depend on architecture:
\itemize{
\item Intel (\code{x86_64}) and M-series (\code{arm64} or \code{aarch64}) for R >= 4.3
\itemize{
\item \verb{/opt/gfortran/}
\item \verb{/opt/gfortran/bin}
}
\item Intel (\code{x86_64}) for R < 4.3
\itemize{
\item \verb{/usr/local/gfortran}
\item \verb{/usr/local/bin/gfortran}
}
\item M-series (\code{arm64} or \code{aarch64}) for 4.1 <= R < 4.3
\itemize{
\item \verb{/opt/R/arm64/gfortran/}
\item \verb{/opt/R/arm64/bin/gfortran}
}
}
}
\section{Check if \code{gfortran} is installed}{


Checks the local file system for whether \code{gfortran} is installed in
the default installation location.
}

\section{Installing \code{gfortran}}{

The \code{gfortran_install()} function aims to install \code{gfortran} into the
appropriate location for \strong{Intel} (\code{x86_64}) or \strong{M-series} (\code{arm64}/\code{aarch64})
depending on the R version used.
\subsection{gfortran Installation for R 4.3}{

The \code{gfortran} installer for R 4.3 is a universal installer that places
\code{gfortran} into the \verb{/opt/gfortran} for both \strong{Intel} (\code{x86_64}) and
\strong{M-series} (\code{arm64}/\code{aarch64}) macs.

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{# Install the downloaded package into root
sudo installer \\
  -pkg /path/to/gfortran-12.2-universal.pkg \\
  -target /
}\if{html}{\out{</div>}}

Once installed, we modify the \code{PATH} environment variable to recognize the newly
installed software by adding into the \verb{~/.Renviron} file the following:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{touch ~/.Renviron
cat << "EOF" > ~./Renviron
## macrtools - gfortran: start
PATH=$\{PATH\}:/opt/gfortran/bin
## macrtools - gfortran: end
EOF
}\if{html}{\out{</div>}}
}

\subsection{gfortran Installation for Intel Macs (\code{x86_64})}{

The Intel \code{gfortran} installer is a DMG image that is mounted, installed,
and unmounted. We're using the following set of \emph{R} sanitized \emph{shell} commands:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{# Mount the `.dmg` installer image
hdiutil attach "$path_to_dmg" -nobrowse -quiet

# Install the package from DMG image into root
sudo installer \\
  -pkg /Volume/gfortran-8.2-Mojave/gfortran-8.2-Mojave/gfortran.pkg \\
  -target /

# Unmount the `.dmg` installer image
hdiutil detach /Volumes/gfortran-8.2-Mojave
}\if{html}{\out{</div>}}

Lastly, we modify the \code{PATH} environment variable to recognize the newly
installed software by adding into the \verb{~/.Renviron} file the following:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{touch ~/.Renviron
cat << "EOF" > ~./Renviron
## macrtools - gfortran: start
PATH=$\{PATH\}:/usr/local/gfortran/bin
## macrtools - gfortran: end
EOF
}\if{html}{\out{</div>}}
}

\subsection{gfortran Installation for M-series Macs (\code{arm64})}{

The \strong{M-series} \code{gfortran} installer is a tar file that is unpacked into the
directory. Depending on the \emph{R} version, we opt to install either
\strong{gfortran 12 for R 4.2} or \strong{gfortran 11 for R 4.1}

If users are on \strong{R 4.2} with an \strong{M-series} mac, then the \emph{R}
sanitized \emph{shell} commands used are:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{URL="https://mac.r-project.org/tools/gfortran-12.0.1-20220312-is-darwin20-arm64.tar.xz"
curl -O --output-dir /tmp/ "$URL"
sudo mkdir -p /opt/R/arm64/
sudo tar fxz /tmp/gfortran-12.0.1-20220312-is-darwin20-arm64.tar.xz -C /opt/R/arm64/ --strip-components 3
rm  /tmp/gfortran-12.0.1-20220312-is-darwin20-arm64.tar.xz
}\if{html}{\out{</div>}}

If users are on \strong{R 4.1} with an \strong{M-series} mac, then the \emph{R}
sanitized \emph{shell} commands used are:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{URL="https://mac.r-project.org/libs-arm64/gfortran-f51f1da0-darwin20.0-arm64.tar.gz"
curl -O --output-dir /tmp/ "$URL"
sudo mkdir -p /opt/R/arm64/
sudo tar fxz /tmp/gfortran-f51f1da0-darwin20.0-arm64.tar.gz -C /opt/R/arm64/ --strip-components 3
rm  /tmp/gfortran-f51f1da0-darwin20.0-arm64.tar.gz
}\if{html}{\out{</div>}}

Lastly, we modify the \code{PATH} environment variable to recognize the newly
installed software by adding into the \verb{~/.Renviron} file the following:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{touch ~/.Renviron
cat << "EOF" > ~./Renviron
## macrtools - gfortran: start
PATH=$\{PATH\}:/opt/R/arm64/gfortran/bin
## macrtools - gfortran: end
EOF
}\if{html}{\out{</div>}}
}
}

\section{Uninstalling \code{gfortran}}{

The \code{gfortran_uninstall()} attempts to remove \code{gfortran} from
the default installation locations described in the details section.
\subsection{Uninstalling gfortran for Intel Macs}{

We use the \emph{R} sanitized \emph{shell} command of:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{sudo rm -rf /usr/local/gfortran /usr/local/bin/gfortran
}\if{html}{\out{</div>}}

These uninstall steps are based on:

\url{https://gcc.gnu.org/wiki/GFortranBinariesMacOS}
}

\subsection{Uninstalling gfortran for M1 or M2 Macs (\code{arm64})}{

For M1 or M2 Macs (\code{arm64}), we use the \emph{R} sanitized \emph{shell} command of:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{sudo rm -rf /opt/R/arm64/gfortran/ /opt/R/arm64/bin/gfortran
}\if{html}{\out{</div>}}

This aligns with the default path used by CRAN for \code{arm64}:

\url{https://mac.r-project.org/tools/}
}
}

\section{Updating \code{gfortran}}{

The \code{gfortran_update()} attempts to update the version of \code{gfortran} installed
using the provided \code{gfortran-update-sdk} inside of \verb{/opt/R/arm64/gfortran/bin}.

Please be advised that the update command only works for M1/M2 (\code{arm64}/\code{aarch64})
users on \emph{R} 4.2 or above.

The update command is issued using an \emph{R} sanitized version of the \emph{shell}
command:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{sudo /opt/R/arm64/gfortran/bin/gfortran-update-sdk
}\if{html}{\out{</div>}}
}

\examples{
# Check if gfortran is installed
is_gfortran_installed()
}
